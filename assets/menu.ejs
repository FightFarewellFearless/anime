<script>
    const Status = { subs: false };
    
    
    function cariAnime() {
        const query = prompt('Anime apa yang ingin kamu cari?\n\nTips: JANGAN masukan episode dan season, hanya masukan nama anime ke dalam kolom pencarian')
        if (query != null) {
            window.location = '/search?q=' + query
        }
    }
    
    async function askNotification() {
    
        if ('serviceWorker' in navigator) {
            subscribeToPush().catch(err => {
                deleteNotification(false);
                alert('Teradi error!');
            });
        }
        else {
            alert('Maaf browser kamu tidak mendukung fitur ini')
        }
    
        const publicVapidKey = "<%= process.env.publicKey %>";
    
    
    
        async function subscribeToPush() {
            if (Status.subs) return alert('Mohon tunggu...');
            Status.subs = true;
            console.log("Registering service worker...");
            const register = await navigator.serviceWorker.register("/assets/notificationWorker.js", {
                scope: "/assets/"
            });
            console.log("Service Worker Registered...");
    
            console.log("Registering Push...");
            var serviceWorker;
            if (register.installing) {
                serviceWorker = register.installing;
                // console.log('Service worker installing');
            } else if (register.waiting) {
                serviceWorker = register.waiting;
                // console.log('Service worker installed & waiting');
            } else if (register.active) {
                serviceWorker = register.active;
                // console.log('Service worker active');
            }
            
            if (serviceWorker) {
                // console.log("sw current state", serviceWorker.state);
                if (serviceWorker.state == "activated") {
                    alert('Kamu sudah mengaktifkan notifikasi')
                    Status.subs = false;
                }
                serviceWorker.addEventListener("statechange", function (e) {
                    (async () => {
                        // console.log("sw statechange : ", e.target.state);
                        if (e.target.state == "activated") {
                            const subscription = await register.pushManager.subscribe({
                                userVisibleOnly: true,
                                applicationServerKey: urlBase64ToUint8Array(publicVapidKey)
                            });
                            console.log("Push Registered...");
    
                            console.log("Subscribing for Push ...");
                            await fetch("/subscribeNotification", {
                                method: "POST",
                                body: JSON.stringify(subscription),
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            });
                            alert('Kamu akan mendapatkan notifikasi ketika ada anime baru yang di upload!')
                            Status.subs = false;
                        }
                    })().catch(() => {
                        deleteNotification(false);
                        if (Notification.permission == "denied") {
                            deleteNotification(false);
                            alert('notifikasi di tolak');
                            Status.subs = false;
                        }
                        else {
                            alert('Teradi error!');
                            Status.subs = false;
                        }
                    })
                });
                serviceWorker.addEventListener('error', (e) => {
                    deleteNotification(false);
                    alert('Teradi error!');
                    Status.subs = false;
                })
            }
        }
    
        function urlBase64ToUint8Array(base64String) {
            const padding = "=".repeat((4 - base64String.length % 4) % 4);
            const base64 = (base64String + padding)
                .replace(/\-/g, "+")
                .replace(/_/g, "/");
    
            const rawData = window.atob(base64);
            const outputArray = new Uint8Array(rawData.length);
    
            for (let i = 0; i < rawData.length; ++i) {
                outputArray[i] = rawData.charCodeAt(i);
            }
            return outputArray;
        }
    }
    
    async function deleteNotification(returnerr = true) {
        if ('serviceWorker' in window.navigator) {
            const regs = await navigator.serviceWorker.getRegistrations();
            const service = await (await navigator.serviceWorker.getRegistration('/assets/'))?.pushManager.getSubscription();
            if (service == undefined) {
                regs.forEach(a => {
                    a.unregister()
                })
                if (returnerr) alert('Kamu tidak punya notifikasi aktif');;
                return;;
            }
            if (regs.length > 0) {
                await fetch("/unsubscribeNotification", {
                    method: "POST",
                    body: JSON.stringify(service),
                    headers: {
                        "Content-Type": "application/json"
                    }
                });
                regs.forEach(a => {
                    a.unregister()
                })
                if (returnerr) alert('Notifikasi berhasil di senyapkan');;
            }
            else {
                if (returnerr) alert('Kamu tidak punya notifikasi aktif');;
            }
        }
        else {
            if (returnerr) alert('Maaf browser kamu tidak mendukung fitur ini');;
        }
    }
</script>